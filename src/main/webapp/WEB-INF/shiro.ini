#See Shiro API
http://shiro.apache.org/static/current/apidocs/org/apache/shiro/web/servlet/IniShiroFilter.html

#create an object of the RoleSecurityJdbcRealm
#IniShiroFilter will inject that object into the SecurityManager
[main]
realmA = bo.gob.mintrabajo.ovt.auth.AuthenticationRealm

#credential matcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
# base64 encoding, not hex in this example:
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashIterations = 1024
# This next property is only needed in Shiro 1.0.  Remove it in 1.1 and later:
credentialsMatcher.hashSalted = true

realmA.credentialsMatcher = $credentialsMatcher

#default login page
authc.loginUrl = /faces/index.xhtml

#this application will use all the default
#filters (see link above)
#for example the default login page is /login.jsp
#users who try to access a page protected by Shiro
#will be sent to /login.jsp
[filters]


#only let authenticated users
#with the appropriate role
#view the web pages in the secure
#and admin areas
[urls]

/index.xhtml = anon
/js/** = anon
/resources/** = anon
/img/** = anon
/resources/img/bg_header.png = anon
/faces/javax.faces.resource/** = anon
/faces/index.xhtml = anon
/template/** = anon


/** = authc